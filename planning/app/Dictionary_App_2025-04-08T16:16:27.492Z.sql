-- This Script will create a dictionary application database schema on PostgreSQL.

CREATE TABLE "words" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"word" VARCHAR(255) NOT NULL,
	"definition" TEXT NOT NULL,
	"inputted_by" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"deleted_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	-- e.g., noun, verb
	"part_of_speech" VARCHAR(255),
	-- Phonetic transcription or audio reference
	"pronunciation" TEXT,
	-- Word origin
	"etymology" TEXT,
	-- Usage example
	"example_sentence" TEXT,
	PRIMARY KEY("id")
);COMMENT ON COLUMN words.part_of_speech IS 'e.g., noun, verb';
COMMENT ON COLUMN words.pronunciation IS 'Phonetic transcription or audio reference';
COMMENT ON COLUMN words.etymology IS 'Word origin';
COMMENT ON COLUMN words.example_sentence IS 'Usage example';

CREATE INDEX "words_index_0"
ON "words" ("word");

CREATE TABLE "commentaries" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	"word_id" INTEGER NOT NULL,
	"comentary" TEXT NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP,
	"deleted_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);
CREATE INDEX "commentaries_index_0"
ON "commentaries" ("word_id");

CREATE TABLE "users" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"email" VARCHAR(255) NOT NULL UNIQUE,
	"username" VARCHAR(255) NOT NULL,
	-- Optional user avatar
	"avatar" TEXT,
	-- User biography
	"bio" TEXT,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP,
	"deleted_at" TIMESTAMP,
	PRIMARY KEY("id")
);COMMENT ON COLUMN users.avatar IS 'Optional user avatar';
COMMENT ON COLUMN users.bio IS 'User biography';


CREATE TABLE "word_links" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"word_id" INTEGER NOT NULL,
	"url" TEXT NOT NULL,
	-- Link title
	"title" TEXT,
	-- Brief description
	"description" TEXT,
	"created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"deleted_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);COMMENT ON COLUMN word_links.title IS 'Link title';
COMMENT ON COLUMN word_links.description IS 'Brief description';


CREATE TABLE "favourites" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER,
	"word_id" INTEGER,
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "word_relationships" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"word_id" INTEGER,
	"related_word_id" INTEGER,
	-- synonym or antonym
	"relationship_type" INTEGER,
	"created_at" TIMESTAMP,
	"updated_at" TIMESTAMP,
	PRIMARY KEY("id")
);COMMENT ON COLUMN word_relationships.relationship_type IS 'synonym or antonym';


CREATE TABLE "tags" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT,
	PRIMARY KEY("id")
);

CREATE TABLE "word_tags" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"word_id" INTEGER,
	"tag_id" INTEGER,
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "sentences" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"sentence" TEXT NOT NULL,
	"en_translation" TEXT,
	"id_translation" TEXT,
	"inputted_by" INTEGER,
	"created_at" TIMESTAMP,
	"updated_at" TIMESTAMP,
	"deleted_at" TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "sentence_words" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"sentence_id" INTEGER NOT NULL,
	"word_id" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

ALTER TABLE "commentaries"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "words"
ADD FOREIGN KEY("inputted_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "commentaries"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "word_links"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "favourites"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "favourites"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "word_relationships"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "word_relationships"
ADD FOREIGN KEY("related_word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "sentence_words"
ADD FOREIGN KEY("sentence_id") REFERENCES "sentences"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "sentence_words"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "word_tags"
ADD FOREIGN KEY("word_id") REFERENCES "words"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "word_tags"
ADD FOREIGN KEY("tag_id") REFERENCES "tags"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "sentences"
ADD FOREIGN KEY("inputted_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
